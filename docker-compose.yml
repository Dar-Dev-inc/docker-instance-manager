version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: dockermanager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: gunicorn dockermanager.wsgi:application --bind 0.0.0.0:8000 --workers 3
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
      - "49152-65535:49152-65535"
    environment:
      - DEBUG=True
      - SECRET_KEY=change-this-in-production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/dockermanager
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,web
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery:
    build: .
    command: celery -A dockermanager worker --loglevel=info
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DEBUG=True
      - SECRET_KEY=change-this-in-production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/dockermanager
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
